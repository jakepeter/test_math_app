import os
from flask import Flask, render_template, request, session
import random

app = Flask(__name__)
app.secret_key = "your_secret_key_here"

# 理科の問題リスト（単元別）
science_questions = {
    "1": [  # 生物の観察（100問）
        ("顕微鏡のレンズを切り替えることで変わるのは？", "倍率"),
        ("プレパラートに使うカバーガラスは何のために使う？", "試料を押さえるため"),
        ("観察するとき、最初に使う対物レンズの倍率は？", "低倍率"),
        ("細胞を見るときに使う顕微鏡の種類は？", "光学顕微鏡"),
        ("顕微鏡で観察するとき、試料の準備に使う液体は？", "水"),
        ("顕微鏡の接眼レンズの倍率は一般的に何倍？", "10倍"),
        ("倍率はどうやって計算する？", "接眼レンズ×対物レンズ"),
        ("プレパラートの材料は？", "ガラス"),
        ("細胞の観察で最も重要なことは？", "焦点を合わせること"),
        ("ピンセットの役割は？", "試料をつかむため"),
        ("観察の際に調整する部品は？", "ステージ"),
        ("細胞を染色する染料は？", "メチレンブルー"),
        ("顕微鏡の光源の役割は？", "試料を照らすこと"),
        ("観察に使う紙は？", "ろ紙"),
        ("細胞壁があるのはどの細胞？", "植物細胞"),
        ("観察で使うメモの形式は？", "スケッチ"),
        ("倍率を上げるとどうなる？", "拡大される"),
        ("焦点が合わないとどう見える？", "ぼやける"),
        ("観察の際、試料はどれくらいの厚さにする？", "薄くする"),
        ("分類の基本単位は？", "種"),
        ("顕微鏡で見える最小の構造は？", "細胞"),
        ("観察に必要な器具は？", "顕微鏡"),
        ("植物細胞に特有な構造は？", "葉緑体"),
        ("動物細胞にあって植物細胞にないものは？", "リソソーム"),
        ("細胞の中の液体は？", "細胞質"),
        ("染色に使う代表的な液体は？", "ヨウ素液"),
        ("プレパラート作成の手順は？", "試料を載せる→カバーガラスを置く"),
        ("光量が不足するとどうなる？", "見えにくくなる"),
        ("観察の注意点は？", "試料を壊さない"),
        ("倍率調整に使うネジは？", "粗動ネジ"),
        ("顕微鏡を使うときの照明の調整は？", "しぼりで行う"),
        ("顕微鏡の部品で、ピントを調節するものは？", "調節ねじ"),
        ("細胞の核の役割は？", "遺伝情報を管理"),
        ("細胞を構成する膜の名前は？", "細胞膜"),
        ("プレパラートを安定させる部品は？", "クリップ"),
        ("染色の目的は？", "細胞の構造を見やすくする"),
        ("観察のとき、顕微鏡はどこを見る？", "接眼レンズ"),
        ("試料を置く部分の名称は？", "ステージ"),
        ("顕微鏡を片付けるとき最初にすることは？", "電源を切る"),
        ("細胞小器官のひとつでエネルギーをつくるのは？", "ミトコンドリア"),
        ("細胞分裂のときに観察できる構造は？", "染色体"),
        ("観察対象の大きさを推定する方法は？", "視野の直径を基準にする"),
        ("カバーガラスを斜めに置く理由は？", "気泡を防ぐため"),
        ("対物レンズの切り替え方法は？", "回転させる"),
        ("光学顕微鏡の特徴は？", "光を使って拡大する"),
        ("電子顕微鏡との違いは？", "拡大倍率が小さい"),
        ("試料の動きを防ぐには？", "カバーガラスで押さえる"),
        ("顕微鏡の視野が暗いときは？", "しぼりを開く"),
        ("視野が四角いのはどのレンズ？", "接眼レンズ"),
        ("視野の明るさを変える部品は？", "しぼり"),
        ("観察中、試料が動いて見える理由は？", "水分があるから"),
        ("スケッチで注意することは？", "簡潔に、色を使わない"),
        ("観察記録に必要な情報は？", "日付、倍率、観察内容"),
        ("顕微鏡で見える細胞の構造は？", "細胞壁、核、葉緑体など"),
        ("プレパラート作成で注意することは？", "気泡を入れない"),
        ("観察時の倍率設定は？", "低倍率→高倍率の順"),
        ("観察対象が中心にないときの対処は？", "ステージを調整"),
        ("カバーガラスの厚さの影響は？", "見えにくくなる"),
        ("顕微鏡の使い終わりにすることは？", "低倍率に戻す"),
        ("試料に水を加える理由は？", "乾燥を防ぐ"),
        ("焦点を合わせるときの注意点は？", "対物レンズとスライドをぶつけない"),
        ("細胞の核が見える理由は？", "染色したため"),
        ("プレパラートに水を垂らす理由は？", "光の屈折を防ぐ"),
        ("試料の動きを止めたいときは？", "固定液を使う"),
        ("観察対象に応じた倍率を選ぶ理由は？", "適切な大きさで観察できる"),
        ("低倍率から始める理由は？", "視野が広く探しやすい"),
        ("スケッチで書くべき構造は？", "見えたまま"),
        ("対物レンズが複数ある理由は？", "倍率を変えるため"),
        ("スライドガラスの清掃方法は？", "ろ紙で拭く"),
        ("顕微鏡の持ち方は？", "腕と鏡筒を持つ"),
        ("観察前に照明をつける理由は？", "明るくするため"),
        ("顕微鏡観察の目的は？", "小さなものを拡大して観察する"),
        ("顕微鏡での観察対象の動きを防ぐ工夫は？", "染色またはカバーガラスで固定"),
        ("観察中に視野が暗くなる原因は？", "しぼりが閉じている"),
        ("観察に使う水の種類は？", "蒸留水"),
        ("焦点が合いづらいときの対処は？", "調節ねじを微調整する"),
        ("細胞観察の対象として使う植物の例は？", "タマネギの皮"),
        ("試料の中央にピントを合わせる理由は？", "観察対象をはっきり見るため"),
        ("観察に使う器具で、手を切らないように注意するものは？", "スライドガラス"),
        ("対物レンズの交換時に注意することは？", "ぶつけないように回す"),
        ("細胞の観察で重要な視点は？", "構造の違いを理解すること"),
        ("細胞の観察記録に使う単位は？", "μm（マイクロメートル）"),
        ("プレパラートがずれる原因は？", "クリップが甘い"),
        ("スライドガラスの大きさは？", "約7.5cm×2.5cm"),
        ("プレパラートの完成後すぐ観察する理由は？", "乾燥を防ぐため"),
        ("観察で最初に行う手順は？", "試料の準備"),
        ("観察後に使用器具を洗う理由は？", "次回も使えるようにする"),
        ("プレパラート作成で注意する器具は？", "ピンセットとスポイト"),
        ("植物細胞と動物細胞の共通点は？", "核、細胞膜、細胞質を持つ"),
        ("観察対象が染まりすぎるときの対処は？", "水で薄める"),
        ("カバーガラスが割れやすい理由は？", "薄くて小さいため"),
        ("光学顕微鏡の限界倍率は？", "1500倍程度"),
        ("観察のとき照明を下に向ける理由は？", "光を試料にあてるため"),
        ("顕微鏡を使う授業で最初に学ぶことは？", "器具の名称と扱い方"),
        ("植物細胞に見られない構造は？", "リボソーム（←間違い探しにも可）"),
        ("対物レンズが高倍率になるほど視野は？", "狭くなる"),
        ("焦点を合わせたあと倍率を上げたらどうする？", "再度微調整する"),
        ("プレパラートがうまく作れない原因の一つは？", "試料が厚すぎる"),
        ("観察における一番の目的は？", "細胞の構造を理解する"),
    ],

     "2": [  # 植物の分類とつくり（100問）[  # 植物の分類とつくり（単元2）
    ("種子をつくらない植物の分類は？", "コケ植物とシダ植物"),
    ("種子をつくる植物の分類は？", "被子植物と裸子植物"),
    ("被子植物と裸子植物の違いは？", "子房があるかどうか"),
    ("コケ植物に維管束はある？", "ない"),
    ("シダ植物は何でなかまをふやす？", "胞子"),
    ("被子植物の葉脈の形で分類できるのは？", "単子葉類と双子葉類"),
    ("単子葉類の葉脈の形は？", "平行脈"),
    ("双子葉類の葉脈の形は？", "網状脈"),
    ("単子葉類の根の特徴は？", "ひげ根"),
    ("双子葉類の根の特徴は？", "主根と側根"),
    ("維管束とは何か？", "水や養分を運ぶ組織"),
    ("コケ植物の例を1つ答えよ。", "ゼニゴケ"),
    ("シダ植物の例を1つ答えよ。", "ゼンマイ"),
    ("単子葉類の例を1つ答えよ。", "イネ"),
    ("双子葉類の例を1つ答えよ。", "アサガオ"),
    ("被子植物に子房はある？", "ある"),
    ("裸子植物に子房はある？", "ない"),
    ("裸子植物の例を1つ答えよ。", "マツ"),
    ("被子植物の花のつくりの特徴は？", "花弁や子房がある"),
    ("裸子植物の花のつくりの特徴は？", "花弁や子房がない"),
    ("植物の分類で葉の形を使う理由は？", "分類の手がかりになるから"),
    ("コケ植物はどのような場所に生える？", "湿った場所"),
    ("維管束の種類は？", "道管と師管"),
    ("道管の役割は？", "水や無機養分を運ぶ"),
    ("師管の役割は？", "光合成産物を運ぶ"),
    ("花粉をつくる部分は？", "雄しべ"),
    ("卵細胞がある部分は？", "雌しべ"),
    ("受粉とは何か？", "花粉が雌しべにつくこと"),
    ("受精とは何か？", "卵細胞と精細胞が合体すること"),
    ("受精後にできるものは？", "種子"),
    ("被子植物の種子はどこにできる？", "子房"),
    ("裸子植物の種子はどこにできる？", "胚珠の表面"),
    ("花びらが目立たない植物は？", "風で受粉する植物"),
    ("虫を引き寄せる花の特徴は？", "色や香りがある"),
    ("花の中で胚珠を守る構造は？", "子房"),
    ("果実は何が変化したもの？", "子房"),
    ("種子は何が変化したもの？", "胚珠"),
    ("胚珠の中にある細胞は？", "卵細胞"),
    ("被子植物の受粉方法は？", "虫や風など"),
    ("裸子植物の受粉方法は？", "風"),
    ("裸子植物の葉の形の特徴は？", "細長い針のような葉"),
    ("被子植物はどんな場所に多い？", "日当たりのよい場所"),
    ("裸子植物はどんな場所に多い？", "山や乾燥地"),
    ("単子葉類の花びらの数の特徴は？", "3の倍数"),
    ("双子葉類の花びらの数の特徴は？", "4や5の倍数"),
    ("被子植物において、種子が発芽する条件は？", "水、適温、空気"),
    ("胚とは何か？", "将来の芽や根になる部分"),
    ("子葉の働きは？", "養分をためる"),
    ("単子葉類の子葉の数は？", "1枚"),
    ("双子葉類の子葉の数は？", "2枚"),
    ("裸子植物に花びらはある？", "ない"),
    ("被子植物はどのように果実を作る？", "子房がふくらむ"),
    ("植物の分類の大まかな流れは？", "種子→子房→葉脈・根"),
    ("種子植物は何でふえる？", "種子"),
    ("胞子植物は何でふえる？", "胞子"),
    ("維管束を持つ植物は？", "種子植物とシダ植物"),
    ("維管束を持たない植物は？", "コケ植物"),
    ("コケ植物の体の構造は？", "茎と葉のようなつくり"),
    ("シダ植物には根がある？", "ある"),
    ("コケ植物には根がある？", "ない"),
    ("被子植物で胚珠は何になる？", "種子"),
    ("被子植物で子房は何になる？", "果実"),
    ("裸子植物には果実がある？", "ない"),
    ("被子植物の葉の特徴は？", "広い葉が多い"),
    ("裸子植物の種子はむき出し？", "はい"),
    ("被子植物の受精の順番は？", "受粉→受精→種子"),
    ("単子葉類の根はいつ出る？", "同時にたくさん出る"),
    ("双子葉類の根はどのように出る？", "主根が最初に出て分かれる"),
    ("単子葉類の成長のしかたは？", "節がのびる"),
    ("双子葉類の成長のしかたは？", "先がのびる"),
    ("種子植物の花の共通点は？", "雄しべと雌しべがある"),
    ("被子植物の果実の役割は？", "種子を守り広げる"),
    ("花粉管は何の役割？", "精細胞を卵細胞へ届ける"),
    ("植物が育つために必要な要素は？", "水、空気、温度、光"),
    ("植物の分類で注目する器官は？", "根、茎、葉、花"),
    ("単子葉類と双子葉類の見分け方は？", "葉脈、根、子葉"),
    ("種子の中にある将来の芽や根は？", "胚"),
    ("種子が発芽する場所は？", "土の中"),
    ("花の色が鮮やかな理由は？", "虫を呼ぶため"),
    ("被子植物における受粉の多くは？", "虫媒花"),
    ("風媒花の特徴は？", "花粉が多い、花が目立たない"),
    ("虫媒花の特徴は？", "花が大きい、色が鮮やか"),
    ("子房が果実になるのは何のため？", "種子を守り運ぶ"),
    ("単子葉類は茎にどのように維管束がある？", "バラバラに分布"),
    ("双子葉類は茎にどのように維管束がある？", "輪のように並ぶ"),
    ("裸子植物の花粉が飛ぶ時期は？", "春"),
    ("被子植物の受粉の手助けをするものは？", "虫、風、水など"),
    ("植物の生活環で重要な変化は？", "受精と発芽"),
    ("単子葉類と双子葉類はどこで分ける？", "子葉の数"),
    ("花が咲かない植物の例は？", "コケ植物、シダ植物"),
    ("葉緑体はどこにある？", "葉の細胞の中"),
    ("花のがくの役割は？", "花を保護する"),
    ("花のめしべの先は何という？", "柱頭"),
    ("めしべの下のふくらみを何という？", "子房"),
    ("葉の働きは？", "光合成"),
    ("根の先にある保護部分は？", "根冠"),
    ("芽の先にある成長点を何という？", "頂芽"),
    ("植物の分類で使う観察器具は？", "ルーペ、顕微鏡"),
    ("花が咲く植物をまとめて何という？", "種子植物"),
    ("胞子でふえる植物をまとめて何という？", "胞子植物"),
    ("植物の分類に使うデータは？", "葉、根、茎、花、種子の形"),
    ("分類の目的は？", "生物の特徴を整理し理解すること"),
]
    # 他の単元も追加可能
}

# 数学の問題生成
def generate_math_question(unit):
    if unit == "1":
        a = random.randint(-10, 10)
        return f"{a} は正の数ですか？", "はい" if a > 0 else "いいえ" if a < 0 else "ゼロ"
    elif unit == "2":
        a = random.randint(-10, 10)
        b = random.randint(-10, 10)
        return f"{a} + ({b}) = ?", str(a + b)
    elif unit == "3":
        a = random.randint(-9, 9)
        b = random.choice([i for i in range(-5, 6) if i != 0])
        if random.choice([True, False]):
            return f"{a} × {b} = ?", str(a * b)
        else:
            return f"{a * b} ÷ {b} = ?", str(a)
    elif unit == "4":
        temp = random.randint(-10, 35)
        return f"気温が {temp}℃ のとき、0℃ より何℃ {('高い' if temp > 0 else '低い' if temp < 0 else '変わらない')}？", str(abs(temp))
    else:
        return "無効な単元です", ""

# 理科の全問題（未使用）
def generate_science_questions_all():
    all_questions = []
    for unit_questions in science_questions.values():
        all_questions.extend(unit_questions)
    return all_questions

# 問題リストを生成
def generate_questions(subject, unit, n=None):
    if subject == "math":
        return [generate_math_question(unit) for _ in range(n or 30)]
    elif subject == "science":
        return science_questions.get(unit, [])
    else:
        return [("無効な科目です", "")]

# トップページ
@app.route("/")
def index():
    return render_template("index.html")

# 科目選択
@app.route("/select_subject", methods=["POST"])
def select_subject():
    subject = request.form.get("subject")
    session["subject"] = subject
    return render_template("select_unit.html", subject=subject)

# クイズ開始
@app.route("/quiz", methods=["POST"])
def quiz():
    subject = session.get("subject")
    unit = request.form.get("unit")
    questions = generate_questions(subject, unit)
    session["questions"] = questions
    session["current"] = 0
    session["unit"] = unit
    session["show_answer"] = False

    question, answer = questions[0]
    return render_template("quiz.html", question=question, answer=answer,
                           unit=unit, subject=subject, current=1,
                           total=len(questions), show_answer=False)

# 回答処理
@app.route("/result", methods=["POST"])
def result():
    subject = session.get("subject", "")
    unit = session.get("unit", "")
    current = session.get("current", 0)
    questions = session.get("questions", [])
    show_answer = session.get("show_answer", False)

    if current >= len(questions):
        return render_template("finish.html", total=len(questions))

    if subject == "science":
        if not show_answer:
            session["show_answer"] = True
            question, answer = questions[current]
            return render_template("quiz.html", question=question, answer=answer,
                                   unit=unit, subject=subject, current=current + 1,
                                   total=len(questions), show_answer=True)
        else:
            current += 1
            session["current"] = current
            session["show_answer"] = False

            if current >= len(questions):
                return render_template("finish.html", total=len(questions))

            question, answer = questions[current]
            return render_template("quiz.html", question=question, answer=answer,
                                   unit=unit, subject=subject, current=current + 1,
                                   total=len(questions), show_answer=False)
    else:
        user_answer = request.form.get("user_answer", "").strip()
        correct_answer = request.form.get("correct_answer", "").strip()
        is_correct = (user_answer == correct_answer)

        current += 1
        session["current"] = current

        if current >= len(questions):
            return render_template("finish.html", total=len(questions))

        question, answer = questions[current]
        return render_template("quiz.html",
                               question=question,
                               answer=answer,
                               unit=unit,
                               subject=subject,
                               current=current + 1,
                               total=len(questions),
                               is_correct=is_correct,
                               user_answer=user_answer,
                               correct_answer=correct_answer)

# アプリ起動
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5001)), debug=True)
